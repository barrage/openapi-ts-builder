info:
  title: Swagger Petstore
  version: 1.0.0
  license:
    name: MIT
openapi: 3.0.3
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/pets/{petId}":
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
servers:
  - url: http://petstore.swagger.io/v1
components:
  responses:
    BadRequestError:
      description: 400 - Bad request error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                nullable: false
              code:
                type: string
                nullable: true
              cause:
                type: string
                nullable: true
                enum:
                  - "no_email_field: Request was received without email field
                    that was expected, validation will probably throw error
                    before we get here"
                  - "no_password_field: same as the above"
                  - "no_email_attribute: same as the above"
                  - "no_password_attribute: same as the above"
                  - "registration_invalid_email: email provided for registration
                    is invalid"
                  - "registration_invalid_password: Password provided for
                    registration is invalid"
                  - "registration_invalid_otp_token: OTP Token provided for
                    registration is invalid"
                  - "token_action_executed: any kind of verification process
                    (email, reset password, freeze account) will get its
                    actionable token, you'll get this error when token was
                    already executed"
                  - "token_action_expired: for the above mentioned token, this
                    will be error when user tries using it after it has expired"
                  - "active_user_cannot_be_deleted_permanently: Error that will
                    be displayed in rare cases when super-admin tries to delete
                    forever active user"
                  - "input is out of range: Input is out of range"
                  - "no possible date and time matching input: No possible date
                    and time matching input"
                  - "input is not enough for unique date and time: Input is not
                    enough for unique date and time"
                  - "input contains invalid characters: Input contains invalid
                    characters"
                  - "premature end of input: Premature end of input"
                  - "trailing input: Trailing input"
                  - "bad or unsupported format string: Bad or unsupported format
                    string"
                  - "invalid_number_of_answers:{}: Error that will be returned
                    when on any question based request you send invalid number
                    of answers"
                  - "invalid_otp_token: Invalid OTP Token"
                  - "cannot_reassign_only_admin: Error that is returned when the
                    request would leave a company without any administrator
                    users"
                  - "cannot_expire_only_admin: Error that is returned when the
                    request would leave a company without any administrator
                    users"
                  - "content_disposition: Error that is returned when the
                    Content-Disposition header is not set"
                  - "filename: Error that is returned when the File name is not
                    sent in upload request"
                  - "file_type_not_allowed: Invalid File type"
                  - "maximum_file_size_exceeded: Maximum File size exceeded"
                  - "cannot_delete_default: When user tries to delete
                    company_pipeline if it is the default one, he will get this
                    error and will need to assign different one as default"
                  - "uploader:content_disposition:unknown: Something is wrong
                    with the upload data or its type"
                  - "uploader:filename:unknown: Something is wrong with the
                    upload data or its type"
              payload:
                nullable: true
                type: object
                properties:
                  "{some_key}":
                    type: string
                    nullable: false
          example:
            message: forbidden error
            code: forbidden
            cause: permission_denied_cannot_do_on_self
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
  requestBodies:
    EmailLoginCredentialsData:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
              token:
                type: string
                format: 6-digit-number
              remember:
                type: boolean
            required:
              - email
              - password
              - remember
